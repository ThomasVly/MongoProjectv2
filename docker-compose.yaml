version: '3.8'
services:
  # Config Servers
  mongo-config1:
    image: mongo:5.0
    container_name: mongo-config1
    command: ["--configsvr", "--replSet", "configReplSet", "--port", "27017"]
    ports:
      - "27019:27017"
    volumes:
      - mongo_config1_data:/data/db


  # Shard 1 (Replica Set)
  mongodb1:
    image: mongo:5.0
    container_name: mongodb1
    ports:
      - "27017:27017"
    command: ["--shardsvr", "--replSet", "shard1rs"]
    volumes:
      - mongo1_data:/data/db

  mongodb2:
    image: mongo:5.0
    container_name: mongodb2
    ports:
      - "27018:27017"
    command: ["--shardsvr", "--replSet", "shard1rs"]
    volumes:
      - mongo2_data:/data/db

  mongo-arbiter:
    image: mongo:5.0
    container_name: mongo-arbiter
    command: ["--shardsvr", "--replSet", "shard1rs"]
    ports:
      - "27023:27017"
    volumes:
      - mongo_arbiter_data:/data/db

  # Shard 2 (Replica Set)
  mongodb3:
    image: mongo:5.0
    container_name: mongodb3
    ports:
      - "27020:27017"
    command: ["--shardsvr", "--replSet", "shard2rs"]
    volumes:
      - mongo3_data:/data/db

  mongodb4:
    image: mongo:5.0
    container_name: mongodb4
    ports:
      - "27021:27017"
    command: ["--shardsvr", "--replSet", "shard2rs"]
    volumes:
      - mongo4_data:/data/db

  mongo-arbiter2:
    image: mongo:5.0
    container_name: mongo-arbiter2
    command: ["--shardsvr", "--replSet", "shard2rs"]
    volumes:
      - mongo_arbiter2_data:/data/db

  # Router (Mongos)
  mongos-router:
    image: mongo:5.0
    container_name: mongos-router
    command: [ "mongos", "--configdb", "configReplSet/mongo-config1:27017,mongo-config2:27017,mongo-config3:27017" ]
    ports:
      - "27022:27017"
    depends_on:
      - mongo-config1

  # Application Spring Boot
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-demo-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongos-router:27017/mongoprojectdb2
    depends_on:
      - mongos-router

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mongo4_data:
  mongo_arbiter_data:
  mongo_arbiter2_data:
  mongo_config1_data:
